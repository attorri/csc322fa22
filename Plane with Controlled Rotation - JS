var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera(60, innerWidth / innerHeight, 1, 100);
camera.position.set(3, 9, 12);
var renderer = new THREE.WebGLRenderer();
renderer.setSize(innerWidth, innerHeight);
document.body.appendChild(renderer.domElement);

var contrls = new THREE.OrbitControls(camera, renderer.domElement);

var light = new THREE.DirectionalLight(0xffffff, 0.75);
light.position.setScalar(1);
scene.add(light);
scene.add(new THREE.AmbientLight(0xffffff, 0.25));

/*
var pts = [
	new THREE.Vector3(0.5, 0.5, 0.5),
  new THREE.Vector3(0, 0, 0),
  new THREE.Vector3(0, 0, 1),
  new THREE.Vector3(1, 0, 1),
  new THREE.Vector3(1, 0, 0)
];

var geom = new THREE.BufferGeometry().setFromPoints(pts);
geom.setIndex([
	0, 1, 2,
  0, 2, 3, 
  0, 3, 4,
  0, 4, 1,
  1, 3, 2,
  1, 4, 3
]);
geom.computeVertexNormals();
*/

var geometry1 = new THREE.PlaneGeometry( .55, 5 );

const white = new THREE.Color('rgb(255,255,255)'); 
const red = new THREE.Color('rgb(165,42,42)'); 
const green = new THREE.Color( 0x00ff00 );

//new THREE.MeshStandardMaterial({color: white, flatShading: true});

var material1 = new THREE.MeshStandardMaterial({color: white, flatShading: true});
var material2 = new THREE.MeshStandardMaterial({color: red, flatShading: true});
var material3 = new THREE.MeshStandardMaterial({color: green, flatShading: true});


var plane1 = new THREE.Mesh( geometry1, material1 );
var plane2 = new THREE.Mesh( geometry1, material2);
var plane3 = new THREE.Mesh( geometry1, material3);

plane2.position.x += 0.275;
plane2.position.z += 0.275;
plane2.rotation.y += 0.5*(Math.PI);
//plane2.position.y += .15;
//plane2.position.z += .55;
//plane3.position.x -= .55;
plane3.position.x += -0.275;
plane3.position.z += 0.275;
plane3.rotation.y += 0.5*(Math.PI);


//var mesh = new THREE.Mesh(geom, mat);

scene.add(plane1, plane2, plane3);

renderer.setAnimationLoop(() => {
  renderer.render(scene, camera);
});
